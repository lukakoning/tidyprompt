% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_chat_history.R
\name{validate_chat_history}
\alias{validate_chat_history}
\title{Validate chat history}
\usage{
validate_chat_history(chat_history, last_message_from_user = FALSE)
}
\arguments{
\item{chat_history}{A dataframe with 'role' and 'content' columns,
where 'role' is the role of the message ('user' or 'assistant') and 'content'
is the content of the message.}

\item{last_message_from_user}{A logical indicating whether the last message
should be from the user. Default is FALSE.

Alternatively, you can provide a single message as a character string.}
}
\value{
If valid, the input object will be returned as is (invisibly).

If a single message is provided, it will be turned into a valid chat_history dataframe
(also returned invisibly).

If not valid, an error will be thrown and nothing will be returned.
}
\description{
This function validates the chat history, ensuring that it is a dataframe
that matches the expected format. If a single message is provided as a
character string, it will be turned into a valid chat history dataframe.
}
\examples{
# Valid (the input object will be returned as is):
validate_chat_history(data.frame(
  role = c("user", "assistant", "user"),
  content = c("Hello", "Hi", "How are you?")
))

# A single message will be turned into a valid chat_history dataframe:
validate_chat_history("Hello")

# Not valid (last message is not from the user); an error will be thrown:
if (FALSE) {
  validate_chat_history(data.frame(
    role = c("user", "assistant"),
    content = c("Hello", "Hi")
  ))
}
}
